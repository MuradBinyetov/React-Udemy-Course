{"version":3,"sources":["components/Counter.module.css","components/Header.module.css","components/UserProfile.module.css","store/index.js","components/Counter.js","components/Auth.js","components/Header.js","components/UserProfile.js","App.js","index.js","components/Auth.module.css"],"names":["module","exports","counterSlice","createSlice","name","initialState","counter","isShow","reducers","increment","state","decrement","increase","action","payload","toggleCounter","authSlice","isAuthenticated","login","logout","store","configureStore","reducer","auth","counterActions","actions","authActions","Counter","dispatch","useDispatch","useSelector","className","classes","value","onClick","Auth","loginHandler","event","preventDefault","onSubmit","control","htmlFor","type","id","Header","isAuth","console","log","header","href","UserProfile","profile","App","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.f932919f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Counter_counter__2_fFh\",\"value\":\"Counter_value__2dldG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3eC_-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__1YuRR\"};","//import { createStore } from \"redux\";\r\nimport { configureStore, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = { counter: 0, isShow: true };\r\n\r\nconst counterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState,\r\n  reducers: {\r\n    increment(state) {\r\n      state.counter++;\r\n    },\r\n    decrement(state) {\r\n      state.counter--;\r\n    },\r\n    increase(state, action) {\r\n      state.counter = state.counter + action.payload;\r\n    },\r\n    toggleCounter(state) {\r\n      state.isShow = !state.isShow;\r\n    },\r\n  },\r\n});\r\n\r\n// const counterReducer = (state = initialState, action) => {\r\n//   if (action.type === \"increment\") {\r\n//     return {\r\n//       counter: state.counter + 1,\r\n//       isShow: true,\r\n//     };\r\n//   }\r\n//   if (action.type === \"increase\") {\r\n//     return {\r\n//       counter: state.counter + action.amount,\r\n//       isShow: true,\r\n//     };\r\n//   }\r\n//   if (action.type === \"decrement\") {\r\n//     return {\r\n//       counter: state.counter - 1,\r\n//       isShow: true,\r\n//     };\r\n//   }\r\n\r\n//   if (action.type === \"toggle\") {\r\n//     console.log(\"adasd\");\r\n//     return {\r\n//       counter: state.counter,\r\n//       isShow: !state.isShow,\r\n//     };\r\n//   }\r\n//   return state;\r\n// };\r\n// const store = createStore(counterReducer);\r\n\r\nconst initialAuthState = { isAuthenticated: false };\r\n\r\nconst authSlice = createSlice({\r\n  name: \"authentication\",\r\n  initialState: initialAuthState,\r\n  reducers: {\r\n    login(state) {\r\n      state.isAuthenticated = true;\r\n    },\r\n    logout(state) {\r\n      state.isAuthenticated = false;\r\n    },\r\n  },\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: { counter: counterSlice.reducer, auth: authSlice.reducer },\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\nexport const authActions = authSlice.actions;\r\n\r\nexport default store;\r\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { counterActions } from \"../store/index\";\nimport classes from \"./Counter.module.css\";\n\nconst Counter = () => {\n  const dispatch = useDispatch();\n  const counter = useSelector((state) => state.counter.counter);\n  const isShow = useSelector((state) => state.isShow);\n\n  const incrementHandler = () => {\n    dispatch(counterActions.increment());\n  };\n\n  const increaseHandler = () => {\n    dispatch(counterActions.increase(5));\n  };\n\n  const decrementHandler = () => {\n    dispatch(counterActions.decrement());\n  };\n\n  const toggleCounterHandler = () => {\n    dispatch(counterActions.toggleCounter());\n  };\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      {isShow && <div className={classes.value}>{counter}</div>}\n      <div>\n        <button onClick={incrementHandler}>+</button>\n        <button onClick={increaseHandler}>+5</button>\n        <button onClick={decrementHandler}>-</button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\nexport default Counter;\n","import classes from \"./Auth.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport { authActions } from \"../store/index\";\n\nconst Auth = () => {\n  const dispatch = useDispatch();\n  \n  const loginHandler = (event) => {\n    event.preventDefault();\n    dispatch(authActions.login());\n  };\n  return (\n    <main className={classes.auth}>\n      <section>\n        <form onSubmit={loginHandler}>\n          <div className={classes.control}>\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" />\n          </div>\n          <button onClick={loginHandler}>Login</button>\n        </form>\n      </section>\n    </main>\n  );\n};\n\nexport default Auth;\n","import { useSelector } from \"react-redux\";\nimport classes from \"./Header.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport { authActions } from \"../store/\";\n\nconst Header = () => {\n  const dispatch = useDispatch();\n\n  const isAuth = useSelector(state=>state.auth.isAuthenticated);\n\n  console.log('header isauth',isAuth); \n\n  const logoutHandler = () => {\n    dispatch(authActions.logout());\n  };\n\n  return (\n    <header className={classes.header}>\n      <h1>Redux Auth</h1>\n      {isAuth && (\n        <nav>\n          <ul>\n            <li>\n              <a href=\"/\">My Products</a>\n            </li>\n            <li>\n              <a href=\"/\">My Sales</a>\n            </li>\n            <li>\n              <button onClick={logoutHandler}>Logout</button>\n            </li>\n          </ul>\n        </nav>\n      )}\n    </header>\n  );\n};\n\nexport default Header;\n","import classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <main className={classes.profile}>\n      <h2>My User Profile</h2>\n    </main>\n  );\n};\n\nexport default UserProfile;\n","import { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Counter from \"./components/Counter\";\nimport Auth from \"./components/Auth\";\nimport Header from \"./components/Header\";\nimport UserProfile from \"./components/UserProfile\"\n\nfunction App() {\n  const isAuth =  useSelector(state=>state.auth.isAuthenticated);\n  return (\n    <Fragment>\n      <Header />\n      {!isAuth &&<Auth />}\n      {isAuth && <UserProfile/>}\n      <Counter />\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport {Provider} from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport store from './store/index';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<Provider store={store}> <App /> </Provider>);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"Auth_auth__8mdxu\",\"control\":\"Auth_control__1lhCO\"};"],"sourceRoot":""}