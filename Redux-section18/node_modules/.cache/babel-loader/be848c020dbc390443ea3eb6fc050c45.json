{"ast":null,"code":"//import { createStore } from \"redux\";\nimport{configureStore,createSlice}from\"@reduxjs/toolkit\";var initialState={counter:0,isShow:true};var counterSlice=createSlice({name:\"counter\",initialState:initialState,reducers:{increment:function increment(state){state.counter++;},decrement:function decrement(state){state.counter--;},increase:function increase(state,action){state.counter=state.counter+action.payload;},toggleCounter:function toggleCounter(state){state.isShow=!state.isShow;}}});// const counterReducer = (state = initialState, action) => {\n//   if (action.type === \"increment\") {\n//     return {\n//       counter: state.counter + 1,\n//       isShow: true,\n//     };\n//   }\n//   if (action.type === \"increase\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       isShow: true,\n//     };\n//   }\n//   if (action.type === \"decrement\") {\n//     return {\n//       counter: state.counter - 1,\n//       isShow: true,\n//     };\n//   }\n//   if (action.type === \"toggle\") {\n//     console.log(\"adasd\");\n//     return {\n//       counter: state.counter,\n//       isShow: !state.isShow,\n//     };\n//   }\n//   return state;\n// };\n// const store = createStore(counterReducer);\nvar initialAuthState={isAuthenticated:false};var authSlice=createSlice({name:\"authentication\",initialState:initialAuthState,reducers:{login:function login(state){state.isAuthenticated=true;},logout:function logout(state){state.isAuthenticated=false;}}});var store=configureStore({reducer:{counter:counterSlice.reducer,auth:authSlice.reducer}});export var counterActions=counterSlice.actions;export var authActions=authSlice.actions;export default store;","map":{"version":3,"names":["configureStore","createSlice","initialState","counter","isShow","counterSlice","name","reducers","increment","state","decrement","increase","action","payload","toggleCounter","initialAuthState","isAuthenticated","authSlice","login","logout","store","reducer","auth","counterActions","actions","authActions"],"sources":["C:/Users/murad.binyatov/Desktop/React-Udemy-Course/Redux-section18/src/store/index.js"],"sourcesContent":["//import { createStore } from \"redux\";\r\nimport { configureStore, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = { counter: 0, isShow: true };\r\n\r\nconst counterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState,\r\n  reducers: {\r\n    increment(state) {\r\n      state.counter++;\r\n    },\r\n    decrement(state) {\r\n      state.counter--;\r\n    },\r\n    increase(state, action) {\r\n      state.counter = state.counter + action.payload;\r\n    },\r\n    toggleCounter(state) {\r\n      state.isShow = !state.isShow;\r\n    },\r\n  },\r\n});\r\n\r\n// const counterReducer = (state = initialState, action) => {\r\n//   if (action.type === \"increment\") {\r\n//     return {\r\n//       counter: state.counter + 1,\r\n//       isShow: true,\r\n//     };\r\n//   }\r\n//   if (action.type === \"increase\") {\r\n//     return {\r\n//       counter: state.counter + action.amount,\r\n//       isShow: true,\r\n//     };\r\n//   }\r\n//   if (action.type === \"decrement\") {\r\n//     return {\r\n//       counter: state.counter - 1,\r\n//       isShow: true,\r\n//     };\r\n//   }\r\n\r\n//   if (action.type === \"toggle\") {\r\n//     console.log(\"adasd\");\r\n//     return {\r\n//       counter: state.counter,\r\n//       isShow: !state.isShow,\r\n//     };\r\n//   }\r\n//   return state;\r\n// };\r\n// const store = createStore(counterReducer);\r\n\r\nconst initialAuthState = { isAuthenticated: false };\r\n\r\nconst authSlice = createSlice({\r\n  name: \"authentication\",\r\n  initialState: initialAuthState,\r\n  reducers: {\r\n    login(state) {\r\n      state.isAuthenticated = true;\r\n    },\r\n    logout(state) {\r\n      state.isAuthenticated = false;\r\n    },\r\n  },\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: { counter: counterSlice.reducer, auth: authSlice.reducer },\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\nexport const authActions = authSlice.actions;\r\n\r\nexport default store;\r\n"],"mappings":"AAAA;AACA,OAASA,cAAT,CAAyBC,WAAzB,KAA4C,kBAA5C,CAEA,GAAMC,aAAY,CAAG,CAAEC,OAAO,CAAE,CAAX,CAAcC,MAAM,CAAE,IAAtB,CAArB,CAEA,GAAMC,aAAY,CAAGJ,WAAW,CAAC,CAC/BK,IAAI,CAAE,SADyB,CAE/BJ,YAAY,CAAZA,YAF+B,CAG/BK,QAAQ,CAAE,CACRC,SADQ,oBACEC,KADF,CACS,CACfA,KAAK,CAACN,OAAN,GACD,CAHO,CAIRO,SAJQ,oBAIED,KAJF,CAIS,CACfA,KAAK,CAACN,OAAN,GACD,CANO,CAORQ,QAPQ,mBAOCF,KAPD,CAOQG,MAPR,CAOgB,CACtBH,KAAK,CAACN,OAAN,CAAgBM,KAAK,CAACN,OAAN,CAAgBS,MAAM,CAACC,OAAvC,CACD,CATO,CAURC,aAVQ,wBAUML,KAVN,CAUa,CACnBA,KAAK,CAACL,MAAN,CAAe,CAACK,KAAK,CAACL,MAAtB,CACD,CAZO,CAHqB,CAAD,CAAhC,CAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMW,iBAAgB,CAAG,CAAEC,eAAe,CAAE,KAAnB,CAAzB,CAEA,GAAMC,UAAS,CAAGhB,WAAW,CAAC,CAC5BK,IAAI,CAAE,gBADsB,CAE5BJ,YAAY,CAAEa,gBAFc,CAG5BR,QAAQ,CAAE,CACRW,KADQ,gBACFT,KADE,CACK,CACXA,KAAK,CAACO,eAAN,CAAwB,IAAxB,CACD,CAHO,CAIRG,MAJQ,iBAIDV,KAJC,CAIM,CACZA,KAAK,CAACO,eAAN,CAAwB,KAAxB,CACD,CANO,CAHkB,CAAD,CAA7B,CAaA,GAAMI,MAAK,CAAGpB,cAAc,CAAC,CAC3BqB,OAAO,CAAE,CAAElB,OAAO,CAAEE,YAAY,CAACgB,OAAxB,CAAiCC,IAAI,CAAEL,SAAS,CAACI,OAAjD,CADkB,CAAD,CAA5B,CAIA,MAAO,IAAME,eAAc,CAAGlB,YAAY,CAACmB,OAApC,CACP,MAAO,IAAMC,YAAW,CAAGR,SAAS,CAACO,OAA9B,CAEP,cAAeJ,MAAf"},"metadata":{},"sourceType":"module"}