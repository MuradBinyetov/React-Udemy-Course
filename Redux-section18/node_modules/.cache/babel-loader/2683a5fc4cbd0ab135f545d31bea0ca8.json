{"ast":null,"code":"//import { createStore } from \"redux\";\nimport { configureStore, createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  isShow: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n\n    toggleCounter(state) {\n      state.isShow = !state.isShow;\n    }\n\n  }\n}); // const counterReducer = (state = initialState, action) => {\n//   if (action.type === \"increment\") {\n//     return {\n//       counter: state.counter + 1,\n//       isShow: true,\n//     };\n//   }\n//   if (action.type === \"increase\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       isShow: true,\n//     };\n//   }\n//   if (action.type === \"decrement\") {\n//     return {\n//       counter: state.counter - 1,\n//       isShow: true,\n//     };\n//   }\n//   if (action.type === \"toggle\") {\n//     console.log(\"adasd\");\n//     return {\n//       counter: state.counter,\n//       isShow: !state.isShow,\n//     };\n//   }\n//   return state;\n// };\n// const store = createStore(counterReducer);\n\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = co;\nexport default store;","map":{"version":3,"names":["configureStore","createSlice","initialState","counter","isShow","counterSlice","name","reducers","increment","state","decrement","increase","action","amount","toggleCounter","store","reducer","counterActions","co"],"sources":["C:/Users/murad.binyatov/Desktop/React-Udemy-Course/Redux-section18/src/store/index.js"],"sourcesContent":["//import { createStore } from \"redux\";\r\nimport { configureStore, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = { counter: 0, isShow: true };\r\n\r\nconst counterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState,\r\n  reducers: {\r\n    increment(state) {\r\n      state.counter++;\r\n    },\r\n    decrement(state) {\r\n      state.counter--;\r\n    },\r\n    increase(state, action) {\r\n      state.counter = state.counter + action.amount;\r\n    },\r\n    toggleCounter(state) {\r\n      state.isShow = !state.isShow;\r\n    },\r\n  },\r\n});\r\n\r\n// const counterReducer = (state = initialState, action) => {\r\n//   if (action.type === \"increment\") {\r\n//     return {\r\n//       counter: state.counter + 1,\r\n//       isShow: true,\r\n//     };\r\n//   }\r\n//   if (action.type === \"increase\") {\r\n//     return {\r\n//       counter: state.counter + action.amount,\r\n//       isShow: true,\r\n//     };\r\n//   }\r\n//   if (action.type === \"decrement\") {\r\n//     return {\r\n//       counter: state.counter - 1,\r\n//       isShow: true,\r\n//     };\r\n//   }\r\n\r\n//   if (action.type === \"toggle\") {\r\n//     console.log(\"adasd\");\r\n//     return {\r\n//       counter: state.counter,\r\n//       isShow: !state.isShow,\r\n//     };\r\n//   }\r\n//   return state;\r\n// };\r\n// const store = createStore(counterReducer);\r\nconst store = configureStore({\r\n  reducer: counterSlice.reducer,\r\n});\r\n\r\nexport const counterActions = co\r\n\r\nexport default store;\r\n"],"mappings":"AAAA;AACA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,kBAA5C;AAEA,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAX;EAAcC,MAAM,EAAE;AAAtB,CAArB;AAEA,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC/BK,IAAI,EAAE,SADyB;EAE/BJ,YAF+B;EAG/BK,QAAQ,EAAE;IACRC,SAAS,CAACC,KAAD,EAAQ;MACfA,KAAK,CAACN,OAAN;IACD,CAHO;;IAIRO,SAAS,CAACD,KAAD,EAAQ;MACfA,KAAK,CAACN,OAAN;IACD,CANO;;IAORQ,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;MACtBH,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAN,GAAgBS,MAAM,CAACC,MAAvC;IACD,CATO;;IAURC,aAAa,CAACL,KAAD,EAAQ;MACnBA,KAAK,CAACL,MAAN,GAAe,CAACK,KAAK,CAACL,MAAtB;IACD;;EAZO;AAHqB,CAAD,CAAhC,C,CAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMW,KAAK,GAAGf,cAAc,CAAC;EAC3BgB,OAAO,EAAEX,YAAY,CAACW;AADK,CAAD,CAA5B;AAIA,OAAO,MAAMC,cAAc,GAAGC,EAAvB;AAEP,eAAeH,KAAf"},"metadata":{},"sourceType":"module"}