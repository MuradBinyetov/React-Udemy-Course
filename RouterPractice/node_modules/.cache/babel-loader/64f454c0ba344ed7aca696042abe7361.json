{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\murad.binyatov\\\\Desktop\\\\React-Udemy-Course\\\\RouterPractice\\\\src\\\\pages\\\\QuoteDetail.js\",\n  _s = $RefreshSig$();\nimport { Fragment, useEffect } from \"react\";\nimport { Link, Route, useParams } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: \"q1\",\n  author: \"Max\",\n  text: \"Learning React is fun\"\n}, {\n  id: \"q2\",\n  author: \"Maximilian\",\n  text: \"Learning React is great\"\n}];\nconst QuoteDetail = () => {\n  _s();\n  const params = useParams();\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error\n  } = useHttp(getSingleQuote, true);\n  useEffect(() => {\n    sendRequest(params.quoteId);\n  }, [sendRequest]);\n  const quote = DUMMY_QUOTES.find(item => item.id === params.quoteId);\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No quote found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${params.quoteId}`,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `/quotes/${params.quoteId}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${params.quoteId}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(QuoteDetail, \"C5R1PKUmbX2cQSQOJxyiKddAdeI=\", false, function () {\n  return [useParams, useHttp];\n});\n_c = QuoteDetail;\nexport default QuoteDetail;\nvar _c;\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"names":["Fragment","useEffect","Link","Route","useParams","Comments","HighlightedQuote","useHttp","getSingleQuote","DUMMY_QUOTES","id","author","text","QuoteDetail","params","sendRequest","status","data","loadedQuote","error","quoteId","quote","find","item"],"sources":["C:/Users/murad.binyatov/Desktop/React-Udemy-Course/RouterPractice/src/pages/QuoteDetail.js"],"sourcesContent":["import { Fragment, useEffect } from \"react\";\r\nimport { Link, Route, useParams } from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\n\r\nconst DUMMY_QUOTES = [\r\n  { id: \"q1\", author: \"Max\", text: \"Learning React is fun\" },\r\n  { id: \"q2\", author: \"Maximilian\", text: \"Learning React is great\" },\r\n];\r\n\r\nconst QuoteDetail = () => {\r\n\r\n  const params = useParams();\r\n\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuote,\r\n    error,\r\n  } = useHttp(getSingleQuote, true);\r\n\r\n  useEffect(()=>{\r\n    sendRequest(params.quoteId)\r\n  },[sendRequest])\r\n\r\n  \r\n\r\n  const quote = DUMMY_QUOTES.find((item) => item.id === params.quoteId);\r\n\r\n  if (!quote) {\r\n    return <p>No quote found</p>;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <HighlightedQuote text={quote.text} author={quote.author} />\r\n      <Route path={`/quotes/${params.quoteId}`} exact>\r\n        <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={`/quotes/${params.quoteId}/comments`}>\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n\r\n      <Route path={`/quotes/${params.quoteId}/comments`}>\r\n        <Comments />\r\n      </Route>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,IAAI,EAAEC,KAAK,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,OAAOC,QAAQ,MAAM,iCAAiC;AACtD,OAAOC,gBAAgB,MAAM,uCAAuC;AACpE,OAAOC,OAAO,MAAM,mBAAmB;AACvC,SAASC,cAAc,QAAQ,YAAY;AAAC;AAE5C,MAAMC,YAAY,GAAG,CACnB;EAAEC,EAAE,EAAE,IAAI;EAAEC,MAAM,EAAE,KAAK;EAAEC,IAAI,EAAE;AAAwB,CAAC,EAC1D;EAAEF,EAAE,EAAE,IAAI;EAAEC,MAAM,EAAE,YAAY;EAAEC,IAAI,EAAE;AAA0B,CAAC,CACpE;AAED,MAAMC,WAAW,GAAG,MAAM;EAAA;EAExB,MAAMC,MAAM,GAAGV,SAAS,EAAE;EAE1B,MAAM;IACJW,WAAW;IACXC,MAAM;IACNC,IAAI,EAAEC,WAAW;IACjBC;EACF,CAAC,GAAGZ,OAAO,CAACC,cAAc,EAAE,IAAI,CAAC;EAEjCP,SAAS,CAAC,MAAI;IACZc,WAAW,CAACD,MAAM,CAACM,OAAO,CAAC;EAC7B,CAAC,EAAC,CAACL,WAAW,CAAC,CAAC;EAIhB,MAAMM,KAAK,GAAGZ,YAAY,CAACa,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACb,EAAE,KAAKI,MAAM,CAACM,OAAO,CAAC;EAErE,IAAI,CAACC,KAAK,EAAE;IACV,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqB;EAC9B;EAEA,oBACE,QAAC,QAAQ;IAAA,wBACP,QAAC,gBAAgB;MAAC,IAAI,EAAEA,KAAK,CAACT,IAAK;MAAC,MAAM,EAAES,KAAK,CAACV;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG,eAC5D,QAAC,KAAK;MAAC,IAAI,EAAG,WAAUG,MAAM,CAACM,OAAQ,EAAE;MAAC,KAAK;MAAA,uBAC7C;QAAK,SAAS,EAAC,UAAU;QAAA,uBACvB,QAAC,IAAI;UAAC,SAAS,EAAC,WAAW;UAAC,EAAE,EAAG,WAAUN,MAAM,CAACM,OAAQ,WAAW;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAE9D;QAAA;QAAA;QAAA;MAAA;IACH;MAAA;MAAA;MAAA;IAAA,QACA,eAER,QAAC,KAAK;MAAC,IAAI,EAAG,WAAUN,MAAM,CAACM,OAAQ,WAAW;MAAA,uBAChD,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACN;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAEf,CAAC;AAAC,GAvCIP,WAAW;EAAA,QAEAT,SAAS,EAOpBG,OAAO;AAAA;AAAA,KATPM,WAAW;AAyCjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}